import requests
from bs4 import BeautifulSoup
import re

async def search_drug(drug_name):
    try:
        url = "https://www.acmespb.ru/search.php"
        
        data = {
            "free_str": drug_name,
            "smode": "0",
            "source": "0"
        }
        
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        
        print(f"\n[DEBUG] –ü–æ–∏—Å–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞: {drug_name}")
        response = requests.post(url, data=data, headers=headers)
        print(f"[DEBUG] –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        soup = BeautifulSoup(response.text, 'html.parser')
        results = []
        
        for item in soup.find_all('div', class_='trow'):
            try:
                if 'thead' in item.get('class', []):
                    continue
                    
                name_elem = item.select_one('div.cell.name p.sra')
                if not name_elem:
                    continue
                    
                name = name_elem.text.strip()
                price = item.select_one('div.cell.pricefull').text.strip() if item.select_one('div.cell.pricefull') else "–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                
                # –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å —Å—Å—ã–ª–∫–∞–º–∏
                pharmacy_elem = item.select_one('div.cell.pharm a')
                address_elem = item.select_one('div.cell.address a')
                
                # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞—Ä—Ç—É
                map_link = address_elem.get('href', '') if address_elem else ''
                coords_match = re.search(r'text=([\d.,]+)', map_link)
                coords = coords_match.group(1) if coords_match else None
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç—ã
                yandex_map_link = f"https://maps.yandex.ru/?text={coords}" if coords else None
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∞–ø—Ç–µ–∫–∏ –∏ –∞–¥—Ä–µ—Å–∞
                pharmacy = pharmacy_elem.text.strip() if pharmacy_elem else "–ê–ø—Ç–µ–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                address = address_elem.text.strip() if address_elem else "–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω"
                
                # –°–æ–∑–¥–∞–µ–º –±–ª–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –≥–¥–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∞–ø—Ç–µ–∫–∏ –∏ –∞–¥—Ä–µ—Å —è–≤–ª—è—é—Ç—Å—è —Å—Å—ã–ª–∫–∞–º–∏
                result_item = (
                    f"üíä {name}\n"
                    f"üí∞ {price} —Ä—É–±.\n"
                )
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∞–ø—Ç–µ–∫—É –∏ –∞–¥—Ä–µ—Å –∫–∞–∫ —Å—Å—ã–ª–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
                if yandex_map_link:
                    result_item += (
                        f"üè• <a href='{yandex_map_link}'>{pharmacy}</a>\n"
                        f"üìç <a href='{yandex_map_link}'>{address}</a>\n"
                    )
                else:
                    result_item += (
                        f"üè• {pharmacy}\n"
                        f"üìç {address}\n"
                    )
                
                results.append(result_item)
                print(f"\n[DEBUG] –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç:\n{result_item}")
                
            except Exception as e:
                print(f"[DEBUG] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —ç–ª–µ–º–µ–Ω—Ç–∞: {str(e)}")
                continue
        
        print(f"\n[DEBUG] –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(results)}")
        return "\n".join(results) if results else "–ü—Ä–µ–ø–∞—Ä–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
        
    except Exception as e:
        print(f"[DEBUG] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {str(e)}" 