import requests
from bs4 import BeautifulSoup

async def search_drug(drug_name):
    try:
        url = f"https://www.acmespb.ru/preparaty/{drug_name.lower()}"
        
        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        
        print(f"\n[DEBUG] –ü–æ–∏—Å–∫ –ø–æ URL: {url}")
        response = requests.get(url, headers=headers)
        print(f"[DEBUG] –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        soup = BeautifulSoup(response.text, 'html.parser')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –≤ —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        with open('debug_page.html', 'w', encoding='utf-8') as f:
            f.write(response.text)
        
        results = []
        print("\n[DEBUG] –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —ç–ª–µ–º–µ–Ω—Ç–æ–≤...")
        
        for item in soup.find_all('tr'):
            try:
                # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞
                name_elem = item.select_one('p.sra')
                if not name_elem:
                    continue
                name = name_elem.text.strip()
                
                # –¶–µ–Ω–∞
                price_elem = item.select_one('div.cell.pricefull')
                price = price_elem.text.strip() if price_elem else "–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                
                # –ê–ø—Ç–µ–∫–∞
                pharmacy_elem = item.select_one('div.cell.pharm a')
                pharmacy = pharmacy_elem.text.strip() if pharmacy_elem else "–ê–ø—Ç–µ–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"
                
                # –ê–¥—Ä–µ—Å
                address_elem = item.select_one('div.cell.address a')
                address = address_elem.text.strip() if address_elem else "–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω"
                
                result_item = f"üíä {name}\nüí∞ {price} —Ä—É–±.\nüè• {pharmacy}\nüìç {address}\n"
                results.append(result_item)
                
                # –í—ã–≤–æ–¥–∏–º –∫–∞–∂–¥—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
                print(f"\n[DEBUG] –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç:\n{result_item}")
                
            except (AttributeError, IndexError) as e:
                print(f"[DEBUG] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —ç–ª–µ–º–µ–Ω—Ç–∞: {str(e)}")
                continue
        
        print(f"\n[DEBUG] –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(results)}")
        
        return "\n".join(results) if results else "–ü—Ä–µ–ø–∞—Ä–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
        
    except Exception as e:
        print(f"[DEBUG] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {str(e)}" 